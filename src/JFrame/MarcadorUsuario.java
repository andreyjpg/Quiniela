
package JFrame;

import javax.accessibility.AccessibleRole;
import javax.swing.JOptionPane;


public class MarcadorUsuario extends javax.swing.JFrame {
    quiniela.Arrays array = new quiniela.Arrays();
    int usuarioActivo = 0;
    String dataTable[][]= new String[array.getArray().length][6];

    public MarcadorUsuario() {
        initComponents();
    }
    
    public MarcadorUsuario(quiniela.Campeon[] camp,quiniela.Curiosidad[] curi,
            quiniela.Equipos[] equi, quiniela.Goleador[] gole,quiniela.Marcadores[]marc,
            quiniela.Partido[] part, quiniela.Usuario[] usua, int activo ){
        initComponents();
        array.setArray(camp);
        array.setArray(curi);
        array.setArray(equi);
        array.setArray(gole);
        array.setArray(marc);
        array.setArray(part);
        array.setArray(usua);
        usuarioActivo = activo; 
        addRow();
        addDataTable();
        this.setLocationRelativeTo(null);
    }
    
    public void addRow(){
        int column = 0;
        boolean existe = false;
        try{
            for(int count=0; count<array.getArrayMarcadores().length; count++){
                if(array.getMarcadores(count).getUsuario() == array.getUsuario(usuarioActivo).getIdUsuario()){
                  dataTable[column][0] = array.getMarcadores(count).getFecha()+
                                "/"+ array.getMarcadores(count).getHora();
                    dataTable[column][1] = array.getMarcadores(count).getEquipoLocal();
                    dataTable[column][2] = String.valueOf(array.getMarcadores(count).getMarcadorLocal());
                    dataTable[column][3] = String.valueOf(array.getMarcadores(count).getMarcadorVisitante());
                    dataTable[column][4] = array.getMarcadores(count).getEquipoVisitante();
                    dataTable[column][5] = String.valueOf(array.getMarcadores(count).getPuntosObtenidos());
                    column++;  
                }
            }
        }catch (NullPointerException err){
            
        }

    }

    
    
    public void addDataTable(){
        tabla.setModel(new javax.swing.table.DefaultTableModel(
            dataTable,
            new String [] {
                "Fecha / hora", "Equipo local", "Marcador Local", "Marcador Visitante"
                    , "Equipo Visitante", "Puntos Obtenidos"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, true, false, false
            };
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
    }
    
    public void Puntos(int row){
       for(int countGame=0; countGame<array.getArray().length; countGame++){
           
       }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();
        guardar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        back = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Fecha / hora", "Equipo local", "Marcador Local", "Marcador Visitante", "Equipo Visitante"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tabla);

        guardar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        guardar.setText("Guardar");
        guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Agregar marcadores");

        back.setText("Regresar");
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(35, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(guardar)
                        .addGap(221, 221, 221))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(70, 70, 70)
                                .addComponent(back))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(33, 33, 33))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(back))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(guardar)
                .addGap(12, 12, 12))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void guardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarActionPerformed
        int row =0;
        boolean dateIndex = false;
        String date = "", hour = "";
        String fecha = "";
        try { 
            for(int user = 0; user < array.getArrayMarcadores().length; user++){
                if(dataTable[row][0] != null){                    
                    int L = Integer.parseInt(String.valueOf(tabla.getModel().getValueAt(row, 2)));
                    int V = Integer.parseInt(String.valueOf(tabla.getModel().getValueAt(row, 3)));
                    if(array.getMarcadores(user)!=null){
                        if(array.getMarcadores(user).getUsuario()== array.getUsuario(usuarioActivo).getIdUsuario()){
                            array.getMarcadores(user).setMarcadorLocal(L);
                            array.getMarcadores(user).setMarcadorVisitante(V);
                            row++;
                        }
                    }

                } else{
                   break;
                }
            }     
            } catch (ArrayIndexOutOfBoundsException err){

            } catch (NullPointerException err2){
                
            }
            JOptionPane.showMessageDialog(null, "Datos Guardados");
    }//GEN-LAST:event_guardarActionPerformed

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
    MenuUsuarios sesion = new MenuUsuarios(array.getArrayCampeon(), array.getArrayCuriosidad(),
            array.getArrayEquipos(),array.getArrayGoleador(),array.getArrayMarcadores(),
            array.getArray(), array.getArrayUsuario(), usuarioActivo);
        sesion.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_backActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MarcadorUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MarcadorUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MarcadorUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MarcadorUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MarcadorUsuario().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton back;
    private javax.swing.JButton guardar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabla;
    // End of variables declaration//GEN-END:variables
}
